# Variables
set $mod Control+Shift
set $mod2 Mod1
floating_modifier $mod
## Workspace Names
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws0 "0"

# Setup displays
#exec --no-startup-id sleep 1 && ~/.screenlayout/default.sh
set $primary-display eDP-1
set $secondary-display eDP-2
exec --no-startup-id picom -b --config ~/.config/picom/picom.conf
### Assign workspaces to screens
workspace $ws1 output $primary-display
workspace $ws2 output $primary-display
workspace $ws3 output $primary-display
workspace $ws4 output $primary-display
workspace $ws5 output $primary-display
workspace $ws6 output $secondary-display
workspace $ws7 output $secondary-display
workspace $ws8 output $secondary-display
workspace $ws9 output $secondary-display
workspace $ws0 output $secondary-display

## Notifications
exec_always --no-startup-id dunst -config ~/.config/dunst/dunstrc 

# Theme
## Wallpaper
exec --no-startup-id nitrogen --restore
## Font
font pango:NotoMono Nerd Font 16px

## Colors setup
set $bg       #282828
set $fg       #d4be98
set $red      #ea6962
set $orange   #e78a4e
set $green    #a9b665
set $blue     #7daea3
set $purple   #d3869b
set $aqua     #89b482
set $darkgray #282828
bar {
    colors {
            background $bg
            statusline $fg

            # workspaces section
            #                    border     backgr.     text
            focused_workspace    $orange    $orange     $bg
            inactive_workspace   $bg        $aqua       $bg
            active_workspace     $bg        $blue       $bg
            urgent_workspace     $red       $red        $fg

        }
}

#       Gruvbox Theme   brdr        bg          text    indictr     chld_brdr
client.focused          $orange     $orange     $bg     $orange     $orange
client.focused_inactive $aqua       $aqua       $bg     $aqua       $aqua
client.unfocused        $bg         $bg         $bg     $bg         $bg
client.urgent           $red        $red        $bg     $red        $red
client.placeholder      $bg         $bg         $bg     $bg         $bg
client.background       $bg

## Gaps
smart_gaps off
hide_edge_borders none
gaps inner 10
gaps outer 10
for_window [class=".*"] border pixel 6
default_floating_border none

## Status Bar
exec_always --no-startup-id ~/.config/polybar/launch.sh

# Settings
workspace_layout default
new_window pixel 2
new_float normal
focus_follows_mouse no
mouse_warping output

# Keybindings
## Change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
## Switch workspaces
bindsym $mod+1 workspace $ws1, exec notify-send --expire-time=575 --urgency=normal "1"
bindsym $mod+2 workspace $ws2, exec notify-send --expire-time=575 --urgency=normal "2"
bindsym $mod+3 workspace $ws3, exec notify-send --expire-time=575 --urgency=normal "3"
bindsym $mod+4 workspace $ws4, exec notify-send --expire-time=575 --urgency=normal "4"
bindsym $mod+5 workspace $ws5, exec notify-send --expire-time=575 --urgency=normal "5"
bindsym $mod+6 workspace $ws6, exec notify-send --expire-time=575 --urgency=normal "6"
bindsym $mod+7 workspace $ws7, exec notify-send --expire-time=575 --urgency=normal "7"
bindsym $mod+8 workspace $ws8, exec notify-send --expire-time=575 --urgency=normal "8"
bindsym $mod+9 workspace $ws9, exec notify-send --expire-time=575 --urgency=normal "9"
bindsym $mod+0 workspace $ws0, exec notify-send --expire-time=575 --urgency=normal "0"
bindsym $mod2+bracketright workspace next, exec notify-send --expire-time=575 --urgency=normal "Next"
bindsym $mod2+bracketleft workspace prev, exec notify-send --expire-time=575 --urgency=normal "Previous"

## Move focused window
bindsym $mod+$mod2+h move left
bindsym $mod+$mod2+j move down
bindsym $mod+$mod2+k move up
bindsym $mod+$mod2+l move right
## Move container
bindsym $mod+$mod2+1 move container to workspace $ws1
bindsym $mod+$mod2+2 move container to workspace $ws2
bindsym $mod+$mod2+3 move container to workspace $ws3
bindsym $mod+$mod2+4 move container to workspace $ws4
bindsym $mod+$mod2+5 move container to workspace $ws5
bindsym $mod+$mod2+6 move container to workspace $ws6
bindsym $mod+$mod2+7 move container to workspace $ws7
bindsym $mod+$mod2+8 move container to workspace $ws8
bindsym $mod+$mod2+9 move container to workspace $ws9
bindsym $mod+$mod2+0 move container to workspace $ws0

## Apps
bindsym $mod+$mod2+w kill
bindsym $mod+Return exec alacritty
### Set these apps to float
for_window [window_role="About"] floating enable
for_window [class="Arandr"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
### Bind program to workspace and focus to them on startup:
# assign [class="(?i)firefox"] $ws2

## System
# Bar toggle
# bindsym $mod+b exec ~/.config/polybar/toggle.sh
# Info notify
# bindsym $mod+i exec notify-send --expire-time=10000 --urgency=low "$(~/.config/i3/scripts/infos.sh)"
bindsym $mod+$mod2+r restart
### Screenshot
exec --no-startup-id flameshot
### Screenshot
bindsym Print exec flameshot gui
### Screenshot the focused window
bindsym $mod+Print exec flameshot screen -c -p ~/Pictures/Screenshot/
### Volume
bindsym XF86AudioRaiseVolume exec amixer sset Master 5%+, exec notify-send --expire-time=500 --urgency=normal "Volume Up $(awk -F"[][]" '/Left:/ { print $2 }' <(amixer sget Master))"
bindsym XF86AudioLowerVolume exec amixer sset Master 5%-, exec notify-send --expire-time=500 --urgency=normal "Volume Down $(awk -F"[][]" '/Left:/ { print $2 }' <(amixer sget Master))"
bindsym XF86AudioMute exec amixer sset Master toggle, exec notify-send --expire-time=1500 --urgency=critical "Volume Toggle mute"
bindsym $mod+XF86AudioMute exec pavucontrol
### Media
bindsym XF86AudioPlay exec playerctl play-pause, exec notify-send --expire-time=1000 --urgency=normal "Play/Pause"
bindsym XF86AudioPause exec playerctl pause, exec notify-send --expire-time=1000 --urgency=normal "Pause"
bindsym XF86AudioNext exec playerctl next, exec notify-send --expire-time=1000 --urgency=normal "Next"
bindsym XF86AudioPrev exec playerctl previous, exec notify-send --expire-time=1000 --urgency=normal "Previous"
### Backlight
bindsym XF86MonBrightnessUp exec light -A 10, exec notify-send --expire-time=500 --urgency=normal "Brightness $(light -G)"
bindsym XF86MonBrightnessDown exec light -U 10, exec notify-send --expire-time=500 --urgency=normal "Brightness $(light -G)"
# Display
bindsym XF86Display exec arandr

## Layouts
bindsym $mod+f fullscreen toggle
bindsym $mod+e layout toggle split
bindsym $mod+o floating toggle
bindsym $mod+$mod2+o focus mode_toggle
# Layout
# toggle|horizontal|vertical
# bindsym $mod+slash split toggle
# stacking/tabbed/splith/splitv:
# bindsym $mod+shift+slash layout toggle all

## Drun
# bindsym $mod+d exec rofi -modi drun -show drun
# Dunst
# bindsym $mod+n exec dunstctl close
# bindsym $mod+Shift+n exec dunstctl close-all

#######################
# === Modes ===========
#######################
# System
set $mode_system System
mode "$mode_system" {
    bindsym l exec exec dunstctl close, exec i3-msg exit, mode "default"
    bindsym s exec dunstctl close, exec systemctl suspend, mode "default"
    bindsym h exec dunstctl close, exec systemctl hibernate, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym p exec systemctl poweroff, mode "default"

    bindsym q mode "default", exec dunstctl close, exec notify-send --expire-time=1000 --urgency=normal "Exit System Mode"
    bindsym Escape mode "default", exec dunstctl close, exec notify-send --expire-time=1000 --urgency=normal "Exit System Mode"
}
bindsym $mod+p mode "$mode_system", exec notify-send --expire-time=10000 --urgency=critical 'System Mode' "$(echo -e "l => logout\ns => suspend\nh => hibernate\nr => reboot\np => poweroff\nq or escape => go back")"

# Resize
# Pixels per resize
set $pxpr 3
set $mode_resize Resize 
mode "$mode_resize" {
        bindsym h resize shrink width $pxpr px or $pxpr ppt
        bindsym j resize grow height $pxpr px or $pxpr ppt
        bindsym k resize shrink height $pxpr px or $pxpr ppt
        bindsym l resize grow width $pxpr px or $pxpr ppt

        bindsym q mode "default", exec dunstctl close, exec notify-send --expire-time=1000 --urgency=normal "Exit Resize Mode"
        bindsym Escape mode "default", exec dunstctl close, exec notify-send --expire-time=1000 --urgency=normal "Exit Resize Mode"
}
bindsym $mod+r mode $mode_resize, exec notify-send --expire-time=10000 --urgency=critical "Resize Mode" "$(echo -e "h => resize left \n j => resize down \n k => resize up \n l => resize right\nq or escape => go back")"

# Move workspace
set $workspace_move Workspace
mode "$workspace_move" {

    # Move workspace between outputs
    bindsym h move workspace to output left
    bindsym l move workspace to output right
    bindsym j move workspace to output down
    bindsym k move workspace to output up

    # Change focus window
    bindsym $mod+h focus left
    bindsym $mod+j focus down
    bindsym $mod+k focus up
    bindsym $mod+l focus right

    # Move focused window
    bindsym $mod+Shift+h move left
    bindsym $mod+Shift+j move down
    bindsym $mod+Shift+k move up
    bindsym $mod+Shift+l move right

    bindsym q mode "default", exec notify-send --expire-time=1000 --urgency=normal "Exit Workspace Mode"
    bindsym Escape mode "default", exec notify-send --expire-time=1000 --urgency=normal "Exit Workspace Mode"
}
bindsym $mod+Shift+w mode "$workspace_move", exec notify-send --expire-time=1500 --urgency=critical "Workspace Mode"

# Output move orientations
set $output_move Output 
mode "$output_move" {
    
    # Secondary screen orientation
    bindsym h exec ~/.screenlayout/left.sh, exec sleep 2 && nitrogen --restore && ~/.config/polybar/launch.sh, mode "default"
    bindsym k exec ~/.screenlayout/up.sh, exec sleep 2 && nitrogen --restore && ~/.config/polybar/launch.sh, mode "default"
    bindsym s exec ~/.screenlayout/solo.sh, exec sleep 2 && nitrogen --restore && ~/.config/polybar/launch.sh, mode "default"

    bindsym q mode "default", exec notify-send --expire-time=1000 --urgency=normal "Exit Output Mode"
    bindsym Escape mode "default", exec notify-send --expire-time=1000 --urgency=normal "Exit Output Mode"
}
bindsym $mod+Shift+m mode "$output_move", exec notify-send --expire-time=1500 --urgency=critical "Output Mode"

# Media
set $media_mode Media
mode "$media_mode" {
    bindsym j exec playerctl play, exec dunstctl close, exec notify-send --expire-time=1000 --urgency=normal "Media Play"
    bindsym k exec playerctl pause, exec dunstctl close, exec notify-send --expire-time=1000 --urgency=normal "Media Pause"
    bindsym l exec playerctl next, exec dunstctl close, exec notify-send --expire-time=1000 --urgency=normal "Media Next"
    bindsym h exec playerctl previous, exec dunstctl close, exec notify-send --expire-time=1000 --urgency=normal "Media Previous"

    bindsym s exec playerctl play-pause, exec dunstctl close, exec notify-send --expire-time=1000 --urgency=normal "Media Play/Pause", exec notify-send --expire-time=2000 --urgency=normal "Exit Media Mode", mode "default"

    bindsym a exec amixer sset Master 5%-, exec dunstctl close, exec notify-send --expire-time=500 --urgency=normal "Media Vol. Down $(awk -F"[][]" '/Left:/ { print $2 }' <(amixer sget Master))"
    bindsym d exec amixer sset Master 5%+, exec dunstctl close, exec notify-send --expire-time=500 --urgency=normal "Media Vol. Up $(awk -F"[][]" '/Left:/ { print $2 }' <(amixer sget Master))"
    bindsym m exec amixer sset Master toggle, exec dunstctl close, exec notify-send --expire-time=500 --urgency=normal 'Vol. toggle mute'

    bindsym q mode "default", exec dunstctl close, exec notify-send --expire-time=1000 --urgency=normal "Exit Media Mode"
    bindsym Escape mode "default", exec dunstctl close, exec notify-send --expire-time=1000 --urgency=normal "Exit Media Mode"
}
bindsym $mod+s mode "$media_mode", exec notify-send --expire-time=8000 --urgency=critical "Media Mode" "$(echo -e "h => previous \n j => play \n k => pause \n l => next\ns => toggle play and exit\na => lower audio\nd => upper audio\nm => toggle mute\nq or escape => go back")"

#######################
# === Autostart =======
#######################

exec --no-startup-id dex-autostart --autostart --environment i3
exec --no-startup-id xss-lock --transfer-sleep-lock -- ~/.local/bin/betterlockscreen -l dimblur
exec --no-startup-id xinput set-prop 11 332 1
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# Desktop notifications
exec --no-startup-id dbus-launch dunst --config ~/.config/dunst/dunstrc

# Network
exec --no-startup-id nm-applet
